1. 如何为函数定义keyword-only参数（写出个例子即可）？
2. 什么是LEGB，请解释
3. 二叉树的性质



1.答：
def foo(*args, x, y):  # 定义一般的kw-only
    print(x, y)
foo(x = 8, y = 'wd')

def foo(*args, x = 10, y = 5): #定义缺省的kw-only
    print(x, y)。
foo()

2.答：LEGB指的是函数作用域的等级关系，或者说函数的作用域所影响的范围的大小关系。L指的local，是本地作用域的命名空间，只能影响某个单一函数空间内的变量，也叫
局部作用域，函数调用时创建，调用结束消亡。E指enclosing，这是比局部作用域在外一层的作用域，这里是嵌套函数的外部函数的命名空间，在这一层定义的函数变量可以使
用到闭包。这一层的作用域可以影响到local。G指的是golbal，全局作用域，是nonlocal在外一层的作用域，全局作用域一般定义在模块上，除了内建函数之外，可以说是最外
层的作用域，在这里定义的变量可以影响到enclosing和local。B指的是Build-in，内置模块的命名空间，是比全局作用域更大的一个影响范围，生命周期从python解释器启动时
创建到解释器退出时消亡。所以一个变量的查找顺序，先在局部作用域找，找不到往外找，一直找到golbal或者build-in。

3.答：（1）在二叉树的第i层上至多有2^(i - 1)个结点（i >= 1）
(2) 深度为k的二叉树，至多有2^k - 1个结点。一层：2-1 = 1  二层：4-1 = 3  三层：8-1 = 7
(3)对任何一颗二叉树T，如果其终端节点数为n0，度数为2的结点为n2，则有n0 = n2 + 1。换句话说，就是叶子节点数-1就等于度数为2的节点数
(4)高度为k的二叉树，至少有k个结点。含有n（n>1）的结点的二叉树高度至多为n，最小为math.ceil(log2(n+1))，不小于对数值的最小整数，向上取整。
(5)具有n个结点的完全二叉树的深度为int(log2n) + 1 或者math.ceil(log2(n+1))
(6)如果有一颗n个结点的完全二叉树（深度为（5）），结点按照层序向下依次编号。如果i = 1，则结点i是二叉树的根，无双亲。如果i>1,则其双亲是int（i/2），向下取整。
就是子节点的编号整除2得到父节点的编号。父节点如果是i，那么左边的孩子结点就是2i，右边孩子结点就是2i + 1。如果2i>n，则结点i无左孩子，即结点i为叶子结点。否
则其左孩子结点存在编号为2i。如果2i + 1 >n,则结点i无右孩子，注意这里并不能说明结点i无左孩子，否则其右孩子结点存在编号为2i + 1.