1. 简要说明Python垃圾回收机制
2. 什么是斐波那契数列、素数、质数和猴子吃桃问题（文字说明即可）？
3. 请写出列表支持的所有方法及说明（例如: append 向列表末尾添加元素）


1.答：python的垃圾回收机制需要注意注意这么几点：
第一，垃圾回收只会回收那些引用计数为0的对象如果引用计数不为零是不会被垃圾回收的。
第二，对于引用计数来说，想要增加一个对象的引用计数就要给这个对象增加一个新的变量
来进行赋值，比如x = 4 ，y = 4   4这个对象的引用计数就是2，有两个变量记住了这个4，如果
接下来x=5，那么对象4的引用计数减了1,对象5的引用计数加了1。如果对象4的引用对象变成
0了就会被垃圾回收。
第三，垃圾回收机制的时间是随机的，如果对GC没有很深刻的认识，不要去随意的改动它，会
引起很大的效率问题。
2.答：（1）斐波那契数列又叫黄金分割数列或者兔子数列。这个数列可以把第1项和第2项的两个1看
做是特例，从第三项开始，每一项的数是前两项的和。因此可以用一个递推公式来表示：
an = an-1 + an-2 
（2） 素数也叫质数，是除了1和它本身之外，无法被其他自然数整除的数，比如11， 23，31等。
也就是说这个数无法被分解，因为但凡能被分解的数都是合数。
（3）猴子吃桃问题，就是一个猴子采了一些桃子，一共吃十天，每一天都吃了前一天的一半多一个，
最后一天的时候只剩下一个桃子了，问第一天一共采了多少桃子。
设第一天摘了x个桃。
第一天s1 ： x
第二天s2： 1/2x - 1
第三天s3： 1/2（s2） - 1
第四天s4： 1/2（s3） - 1
……
第九天s9： 1/2（s8） - 1  --> s8 = 2s9 + 2
这里有一个隐含问题，第十天的1个其实是第九天吃完之后的，这样用逆向思维逆着推倒就能算出来
但是网上说这里有一个逆推公式？
3.答：
索引 list[index]  返回索引对应的值  O(1)
查询 index() , count() 遍历元素 index() 返回索引号，count返回元素个数 都是O(n)
修改 list(index) = value 元素修改
增加 list.append() 尾部追加单个元素 算是最常用的方法之一  。insert(index, obj) 指定索引处加入元素，慎用！ extend(可迭代对象) 一次性的加入
删除 remove(value) 删除指定元素，慎用！ pop() 尾部弹出元素并返回元素的值，用的较多 pop([index]) 弹出指定索引的元素 慎用
复制 有浅拷贝与深拷贝的区别，list.copy() 是浅拷贝，如果遇到复杂的引用类型拷贝的不完全。深拷贝需要调用import copy 模块 copy.deepcopy(list)
翻转 reverse() 把列表全部的反转一遍，效率比O(n)还要耗时，能不用就不用  可以用生成器处理
排序 sort(key, reverse) reverse缺省升序，降序排列时，reverse = True 另外列表中如果有不同类型的元素要排序时可以用key统一转成str类型
