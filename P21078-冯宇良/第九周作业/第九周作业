1. 什么是类和实例并说明他们之间的关系
class ClassName:
    def __init__(self):
        print('init')
a = ClassName()  # 实例
类:
必须使用class关键字
类名必须使用大驼峰命名
类定义完成后,产生一个类对象,绑定到标识符ClassName上
实例化:
在类对象后面加上(),调用类的实例化,完成实例化

2. 类的实例方法、类方法和静态分别如何定义举例说明，并总结它们的应用场景
类的实例化方法:
__init__:对实例初始化
instance:实例对象
__name__:对象名
__class__:对象的类型
__dict__对象的属性的字典
__qualname__:类的限定名
类方法:
1使用@classmethod装饰器修饰的方法
2必须至少有一个参数,且第一个参数留给了cls,cls代指调用者即类对象自身
3cls标识符是任意合法名称
4通过clas可以直接操作类属性
静态方法:
1使用@staticmethod装饰器修饰的方法
2调用是不会隐式的传入参数
表明这个方法属于这个名次空间.函数归在一起,方便组织管理

3. MRO是什么，描述其查找顺序
MRO 方法解析顺序
经典算法 (2.2之前) 按照定义从左到右,深度优先策略DBACA
新式算法(2.2版本)经典算法的神级,深度优先 从服的只保留最后一个DBCA object
C3算法(2.3之后)类被创建出来之后,就会计算出MRO有序列表 解决多继承的二义性DBCA object

4. Mixin是什么，描述其应用场景
Mixin和其他类混合进来,同时带来了类的属性,可继承
效果与装饰器效果一样
