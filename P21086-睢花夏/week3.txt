1.
浅拷贝，是指创建一个新的对象，其内容是原对象中元素的引用。
深拷贝，是指创建一个新的对象，然后递归的拷贝原对象所包含的子对象，深拷贝出来的对象与原对象没有任何关联。
浅拷贝和深拷贝的不同仅仅是对组合对象来说，所谓的组合对象就是包含了其它对象的对象，如列表。而对于数字、字符串以及其它“原子”类型，没有拷贝一说，产生的都是原对象的引用。
2.
列表中的对象是可变的，元组中的对象是不可变的。列表是可读可写的，元组是只可读的，所以没有增删改的操作。列表使用[]表示，元组使用()表示。
相同点是都支持正负索引，可通过索引查找元素，都可以使用index，count，len函数，时间复杂度都是O(n)。
3.  
join  将可迭代对象连接起来，返回一个新字符串
+  将两个字符串连接起来，返回一个新字符串
split  从左向右，按指定分隔符切分字符串，缺省的情况下空白字符串作为分隔符
rsplit  从右向左，按指定分隔符切分字符串，缺省的情况下空白字符串作为分隔符
splitlines  按行来切分字符串
(r)partition  从左(右)至右(左)，遇到分隔符就把字符串分割成两部分，返回头、分隔符、尾三部分的三元组;如果没有找到分隔符，就返回头、2个空元素的三元组
upper  返回字符串的大写
lower   返回字符串的小写
swapcase  交互大小写
title  标题的每个单词都大写
capitalize  首个单词大写
center  居中
zfill  居右，左边用0填充
ljust  左对齐
rjust  右对齐
replace  字符串中找到匹配替换为新子串，返回新字符串
(l)(r)strip  从字符串(左)(右)两端去除指定的字符集chars中的所有字符
(r)find  (r)index  从左(右)至右(左)在指定区间查找子串，两个返回异常不同
len  返回字符串长度
count  在指定的区间，从左至右，统计子串出现的次数
(start)endswith  在指定区间，字符串是否以xx(开头)结尾
isalnum() -> bool 是否是字母和数字组成 
isalpha() 是否是字母
isdecimal() 是否只包含十进制数字
isdigit() 是否全部数字(0~9)
isidentifier() 是不是字母和下划线开头，其他都是字母、数字、下划线 
islower() 是否都是小写
isupper() 是否全部大写
isspace() 是否只包含空白字符
format函数格式字符串***
"{} {xxx}".format(*args, **kwargs) -> str
