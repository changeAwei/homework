1. 什么是类和实例并说明他们之间的关系
类是抽象的概念，是万事万物的抽象，是一类事物的共同特征的集合。
用计算机语言来描述类，就是属性和方法的集合。

对象（实例）instance、object
对象是类的具象，是一个实体。 对于我们每个人这个个体，都是抽象概念人类的不同的实体。


2. 类的实例方法、类方法和静态分别如何定义举例说明，并总结它们的应用场景

#实例方法
class Person:
    def __init__(self, name, age):
        self.name = name
        self.age = age


tom = Person('Tom', 20)
jerry = Person('Je', 25)
print(tom.name, jerry.age)

#类方法
class Person:
    @classmethod
    def class_method(cls): 
        print('class = {0.__name__} ({0})'.format(cls)) 
        cls.HEIGHT = 170

Person.class_method()
print(Person.__dict__)
# 1. 在类定义中，使用@classmethod装饰器修饰的方法
# 2. 必须至少有一个参数，且第一个参数留给了cls，cls指代调用者即类对象自身 
# 3. cls这个标识符可以是任意合法名称，但是为了易读，请不要修改
# 4. 通过cls可以直接操作类的属性

#静态方法
class Person:
    @classmethod
    def class_method(cls):
        print('class = {0.__name__} ({0})'.format(cls)) 
        cls.HEIGHT = 170
    @staticmethod
    def static_methd():
        print(Person.HEIGHT)

Person.class_method()
Person.static_methd()
print(Person.__dict__)
# 1. 在类定义中，使用@staticmethod装饰器修饰的方法 
# 2. 调用时，不会隐式的传入参数
# 静态方法，只是表明这个方法属于这个名词空间。函数归在一起，方便组织管理。

