abs()
返回数字的绝对值，如果参数是一个复数，则返回它的大小。	     
all()
用于判断给定的可迭代参数iterable中的所有元素，如果iterable的所有元素不为0、''、False或者iterable为空，all(iterable)返回True，否则返回False；
空元组、空列表返回值为True，这里要特别注意。	         
any()
用于判断给定的可迭代参数iterable是否全部为False，则返回False，如果有一个为True，则返回True。	             			
ascii()
返回一个表示对象的字符串	           		
bin()
返回一个整数 int 或者长整数 long int 的二进制表示。	            	        
bool()
用于将给定参数转换为布尔类型，如果没有参数，返回False。	            		
breakpoint()
用于debug，会中断当前程序并进入pdb调试器	     			
bytearray()
返回一个新字节数组。这个数组里的元素是可变的，并且每个元素的值范围: 0 <= x < 256。	        		
bytes()	 
返回一个新的 bytes 对象，该对象是一个 0 <= x < 256 区间内的整数不可变序列。它是 bytearray 的不可变版本。              	       	      
callable()
用于检查一个对象是否是可调用的。如果返回True，object仍然可能调用失败；但如果返回False，调用对象object绝对不会成功。	       			
chr()	
用一个整数作参数，返回一个对应的字符。返回值是当前整数对应的ASCII字符。                 	
classmethod()
classmethod修饰符对应的函数不需要实例化，不需要self参数，但第一个参数需要是表示自身类的cls参数，可以来调用类的属性，类的方法，实例化对象等。返回函数的类方法。	        		
compile()
将一个字符串编译为字节代码。	        	
complex()
 函数用于创建一个值为real + imag * j的复数或者转化一个字符串或数为复数。如果第一个参数为字符串，则不需要指定第二个参数。	        	 
delattr()
用于删除属性。
dict()
用于创建一个字典。
dir()
返回模块的属性列表，当函数不带参数时，返回当前范围内的变量、方法和定义的类型列表；带参数时，返回参数的属性、方法列表。如果参数包含方法__dir__()，该方法将被调用。如果参数不包含__dir__()，该方法将最大限度地收集参数信息。
divmod()
接收两个数字类型（非复数）参数，返回一个包含商和余数的元组(a // b, a % b)。
enumerate()
用于将一个可遍历的数据对象(如列表、元组或字符串)组合为一个索引序列，同时列出数据和数据下标，一般用在for循环当中。
eval()
用来执行一个字符串表达式，并返回表达式的值。
exec()
执行储存在字符串或文件中的 Python 语句，相比于 eval，exec可以执行更复杂的 Python 代码。
filter()
用于过滤序列，过滤掉不符合条件的元素，返回一个迭代器对象。
接收两个参数，第一个为函数，第二个为序列，序列的每个元素作为参数传递给函数进行判，然后返回True或False，最后将返回True的元素放到新列表中。
float()
用于将整数和字符串转换成浮点数。
format()
格式化字符串的函数
frozenset()
返回一个冻结的集合，冻结后集合不能再添加或删除任何元素。
getattr()
用于返回一个对象属性值。
globals()
会以字典类型返回当前位置的全部全局变量。
hasattr()
用于判断对象是否包含对应的属性。如果对象有该属性返回True，否则返回False。
hash()
用于获取取一个对象（字符串或者数值等）的哈希值。
help()
用于查看函数或模块用途的详细说明。
hex()
用于将一个指定数字转换为 16 进制数
id()
用于获取对象的内存地址。
input()	
接受一个标准输入数据，返回为 string 类型。
int()
用于将一个字符串或数字转换为整型。
isinstance()
用于判断一个对象是否是一个已知的类型，类似 type()。
issubclass()
用于判断参数class是否是类型参数classinfo的子类。
iter()
用来生成迭代器。
len()
返回对象（字符、列表、元组等）长度或项目个数。
list()
用于将元组或字符串转换为列表。
locals()
以字典类型返回当前位置的全部局部变量。
map()
会根据提供的函数对指定序列做映射。
max()
返回给定参数的最大值，参数可以为序列
memoryview()
返回给定参数的内存查看对象(Momory view)。
所谓内存查看对象，是指对支持缓冲区协议的数据进行包装，在不需要复制对象基础上允许Python代码访问。
min()
返回给定参数的最小值，参数可以为序列
next()
返回迭代器的下一个项目。
object()
返回一个无特点的对象，是Python中所有类的基类。
oct()
将一个整数转换成8进制字符串。
open()
用于打开一个文件，并返回文件对象，在对文件进行处理过程都需要使用到这个函数，如果该文件无法被打开，会抛出 OSError。
ord()
是chr()函数（对于8位的ASCII字符串）的配对函数，它以一个字符串（Unicode字符）作为参数，返回对应的ASCII数值，或者Unicode数值。
返回值是对应的十进制整数。
pow()
返回x的y次方的值。
print()
用于打印输出。
property()
作用是在新式类中返回属性值。
range()
返回的是一个可迭代对象，前包后不包。
repr()
将对象转化为供解释器读取的形式，返回一个对象的 string 格式。
reversed()
返回一个反转的迭代器。
round()	
返回浮点数x的四舍五入值。如果距离两边一样远，会保留到偶数的一边。
set()
创建一个无序不重复元素集，可进行关系测试，删除重复数据，还可以计算交集、差集、并集等。
setattr()
用于设置属性值，该属性不一定是存在的。
slice()
实现切片对象，主要用在切片操作函数里的参数传递。
sorted()
对所有可迭代的对象进行排序操作。
staticmethod()
返回函数的静态方法。
str()
返回一个对象的string格式。
sum()
对系列进行求和计算。
super()
用于调用父类(超类)的一个方法。
tuple()
将列表转换为元组
type()
如果只有第一个参数则返回对象的类型，三个参数返回新的类型对象。
vars()
返回对象object的属性和属性值的字典对象。如果没有参数，就打印当前调用位置的属性和属性值，类似locals()。
zip()
用于将可迭代的对象作为参数，将对象中对应的元素打包成一个个元组，然后返回由这些元组组成的对象，这样做的好处是节约了不少的内存。
__import__()
用于动态加载类和函数 。
如果一个模块经常变化就可以使用 __import__() 来动态载入。



















