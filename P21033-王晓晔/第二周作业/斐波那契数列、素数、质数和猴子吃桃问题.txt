1> 斐波那契数列问题：
斐波那契数列就是一个数列，它的前两位数是1，1，之后每一位数都是前两位数的之和，即F(1)=1，F(2)=1, F(n)=F(n-1)+F(n-2)；
这样的数列就是斐波那契数列。
解决的时候利用循环，注意每次更新相加数的值。
2> 素数（质数）问题：
素数定义为在大于1的自然数中，除了1和它本身以外不再有其他因数。
问题一般是要求写出n（n比较大）以内的所有素数。
解决的时候可以利用两层循环，对每个数字都找一下所有比它小的数能不能整除它。
n如果较大，要考虑效率问题进行优化，对于被除数，可以首先舍弃掉所有除了2以外的偶数，然后在所有大于10的数字中舍弃结尾是5的数。
对于除数，可以将除数的范围控制在3到被除数的开平方加1当中，并且只取其中的奇数。
3> 猴子吃桃问题：
是指一个猴子第一天摘了一些桃子，每天吃剩下的桃子的一半多一个，到第十天早上只有1个桃子，问第一天共有多少个桃子。
解决的时候利用循环进行反推，要注意其实第九天的结束就已经只剩下一个桃子了，所以循环应该是9次。