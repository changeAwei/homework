1. 说明列表的浅拷贝和深拷贝的区别
浅拷贝：对于列表中的元素，如果是引用类型的，仅复制引用的内存地址。复制后的新列表和原列表，如果里面有引用类型，两个列表中修改引用类型里的数据，另一个列表的内容也会改变
深拷贝：拷贝后是内容一致但完全独立的新对象，可以各自修改列表的内容互不干涉。

2. 说明列表和元组的相同点和不同点
相同点：列表和元组都是有序的序列，除了少部分特有的方法，基本使用方法大致也相同。
不同点：列表可以修改，元组是只读的，增删改方法都没有

3. 请写出字符串支持的所有方法及说明（例如: lower 返回字符串的小写）
string.capitalize()	字符串的第一个字符转成大写
string.center()	返回一个原字符串内容居中，并使用空格填充至指定长度width的新字符串
string.count()	返回子字符串在字符串中出现的次数，如果指定范围则返回指定范围内子字符串出现的次数
string.decode()	以指定的编码格式解码字符串
string.encode()	以指定的编码格式编码字符串
string.endswith()	检查字符串是否以指定子字符串结束，可以设置范围，返回True或False
string.expandtabs()	把字符串中的tab符号转为空格
string.find()	检测子字符串是否在字符串中，可以指定范围，如果是返回开始的索引值，否则返回-1
string.format()	格式化字符串
string.index()	跟find()方法一样，只不过如果如果没找到会抛异常
string.isalnum()	判断字符串是不是字母和数字组成
string.isalpha()	判断字符串是不是只有字母
string.isdecimal()	是否只包含十进制数字――Unicode数字，，全角数字（双字节）
string.isdigit()	是否只包含数字――Unicode数字，byte数字（单字节），全角数字（双字节），罗马数字
string.islower()	是否都是小写
string.isnumeric()	包含的字符是不是都是数字――Unicode数字，全角数字（双字节），罗马数字，汉字数字
string.isspace()	是否只包含空格
string.istitle()	检测字符串中所有的单词拼写首字母是否为大写，且其他字母为小写
string.isupper()	是否都为大写
string.join()	以字符串作为分隔符，将元素序列中所有的元素合并为一个新的字符串
string.ljust()	返回一个原字符串左对齐，并使用空格填充至指定长度的新字符串
string.lower()	转换字符串中所有大写字符为小写
string.lstrip()	截掉字符串左边的指定字符，默认空格
string.maketrans()	创建字符映射的转换表，第一个参数表示需要转换的字符，第二个参数表示转换的目标。
max(str)		返回字符串str中最大的字母。
min(str)		返回字符串str中最小的字母。
string.partition()	遇到第一个指定的分隔符，就把字符串分割成两部分，并返回（头、分隔符、尾）三部分，如果没有找到，就返回（字符串本身，空，空）
string.replace(str1, str2,  num)		把字符串中的str1替换成str2，如果num指定，则替换不超过num次.
string.rfind()	类似于find()函数，不过是从右边开始查找
string.rindex()	类似于index()，不过是从右边开始
string.rjust()	返回一个原字符串右对齐,并使用空格填充至长度 width 的新字符串
string.rpartition()	类似于partition()函数，不过是从右边开始查找
string.rstrip()	删除字符串末尾的空格
string.split()	以子字符串为分隔符切片字符串
string.splitlines([keepends])	按照行('\r', '\r\n', \n')分隔，返回一个包含各行作为元素的列表，如果可选参数keepends为默认False，不包含换行符，如果为True，则保留换行符。
string.startswith()	检查字符串是否是以指定子字符串开头，可以在指定范围内检查
string.strip()	移除字符串头尾指定的字符（默认为空格或换行符）或字符序列
string.swapcase()	翻转字符串中的大小写
string.title()	返回"标题化"的字符串，就是所有单词都是以大写开始，其余字母都是小写
string.translate()	根据table（通过maketrans转换而来）给出的表转换字符串的字符，要过滤掉的字符放到del参数中
string.upper()	转换字符串中的小写字母为大写
string.zfill()	返回指定长度的字符串，原字符串右对齐，前面填充0

4. 使用选择排序算法实现排序[3, 5, 1, 7, 9, 6, 8]

5. 有如下一个字符串变量logs，请统计出每种请求类型的数量（提示：空格分割的第2列是请求类型），得到如下输出：
POST 2
GET 3
下边是logs变量：
logs = '''
111.30.144.7 "POST /mock/login/?t=GET HTTP/1.1" 200 
111.30.144.7 "Get /mock/users/?t=POST HTTP/1.1" 200 
111.13.100.92 "Post /mock/login/ HTTP/1.1" 200 
223.88.60.88 "GET /mock/users/?t=POST HTTP/1.1" 200 
111.30.144.7 "GET /mock/users/ HTTP/1.1" 200 
''' 