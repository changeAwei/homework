1.
列表的深拷贝与浅拷贝的区别：
浅拷贝：拷贝父对象，不会拷贝对象内部的子对象,子对象是引用，指向同一对象
深拷贝：拷贝父对象及及其子对象，拷贝后的各对象与原对象之间完全独立
2.
列表和元组的相同点和不同点：
相同点：都是可迭代对象，可索引，元素可为任意类型
不同点：列表可变，元组不可变
3.
字符串方法：
s.lower:返回字符串的小写格式
s.upper:返回字符串的大写格式
s.title:返回所有单词首字母大写，其他字母全部小写的字符串
s.capitalize:返回第一个单词首字母大写，其他字母全部小写的字符串
s.swapcase:返回字符串大小写转换后的字符串
s.isalnum:字符串是否只由字母和数字组成
s.isalpha:字符串是否只由字母组成
s.isdecimal:字符串是否只由十进制数字组成
s.isdigit:字符串是否全部是数字
s.isidentifier:字符串是否由字母和下划线开头，其他都是字母、数字、下划线
s.lower:字符串是否全部都是小写
s.upper:字符串是否全部大写
s.isspace:字符串是否只包含空白字符
s.istitle:字符串每个单词的首字母是否大写
s.center(width[,fillchar):将字符串居中，左右两边使用fillchar(默认空格)填充，使字符串长度为width，若width小于字符串长度，则无法填充，返回字符串本身
s.ljust(width[,fillchar):在字符串右边使用fillchar(默认空格)填充，使字符串长度为width，若width小于字符串长度，则无法填充，返回字符串本身
s.rjust(width[,fillchar):在字符串左边使用fillchar(默认空格)填充，使字符串长度为width，若width小于字符串长度，则无法填充，返回字符串本身
s.zfill(width):在字符串左边使用0填充，使字符串长度为width，若字符串前有正负号，则0填充在正负号后面，正负号算入长度width，若width小于字符串长度，则无法填充，返回字符串本身
s.count(sub[,start[,end]]):返回字串sub在字符串s指定区间中出现的次数
s.startswith(suffix[,start[,stop]]):在指定区间内是否以suffix开头，返回True or Falus
s.endswith(suffix[,start[,stop]]):在指定区间内是否以suffix结尾，返回True or Falus
s.find(sub[,start[,end]]):在字符串指定区间内查找字串sub，找到返回索引位置，找不到返回-1
s.index(sub[,start[,end]]):同find，不同点为找不到是抛异常
s.replace(old,new[,count]):将字符串中指定字串old替换为字串new，可选参数count表示只替换前countf个字串
s.partition(sep):在左边第一个sep处对字符串进行分割，返回包含3元素的元组：sep左边、sep、sep右边,若找不到sep，则返回元组中后两元素为空
s.rpartition(sep):在右边第一个sep处对字符串进行分割，返回包含3元素的元组：sep左边、sep、sep右边，若找不到sep，则返回元组中前两元素为空
s.split(sep=None,maxsplit=-1):按照sep(默认空格)对字符串进行分割，指定次数maxsplit(默认-1表示遇到sep即分割)
s.rsplit(sep=None,maxsplit=-1):同split，从右向左搜索
s.join(iterable):将可迭代对象各元素用字符串s连接
s.strip([chars]):移除字符串左右两边的指定字符（默认为空白字符）
s.lstrip([chars]):移除字符串左边的指定字符（默认为空白字符）
s.rstrip([chars]):移除字符串右边的指定字符（默认为空白字符）

