1. 简要说明Python垃圾回收机制（请老师说下我这样的理解的问题所在）
	我的理解：
		python内存管理是建立在PVM上的内存管理机制，在Python中一切皆为对象，它管理内存的方式是使用计算引用计数的方式，当引用计数为0时则自动清除。
		并且可以说python中的内存管理是线性逻辑的，连续的数据在内存是放在连续的地址区间，好比有很多房间，散户客人入住可以不是连续的房间，但是共同的客人在要求连续房间时内存管理会将分散的客人分为长期入住区域和散户区域，散户区域客人走后内存会留出房间（通过引用计数的方式判断客人是散户还是长期客人），当有连续客人需要入住直接放入连续的房间，要是散户客人不走变成了长期入住的客人直接将散户的房间放入连续的房间地址。
	网上解释：
		对于一个字符串、列表、类甚至数值都是对象，且定位简单易用的语言，自然不会让用户去处理如何分配回收内存的问题。
		python里也同java一样采用了垃圾收集机制，不过不一样的是，python采用的是引用计数机制为主，标记-清除和分代收集两种机制为辅的策略
		引用计数机制：
			python里每一个东西都是对象，当一个对象有新的引用时其引用计数就会增加，当引用它的对象被删除其引用计数就会减少，引用计数为0时，该对象生命就结束了。
		标记-清除机制：
			首先标记对象（垃圾检测），然后清除垃圾（垃圾回收）
		分代技术：
			对象存在时间越长，越可能不是垃圾，应该越少去收集

2. 什么是斐波那契数列、素数、质数和猴子吃桃问题（文字说明即可）？

	斐波那数列：黄金分割分割数列，F（n） = F（n-2）+F（n-1），1,1,2,3,5,8,13,21,34,55,89...... 
	质数又称素数：大于1的自然数，除了1和它本身外不能被其他自然数整除的数叫质数，否则称为合数
	猴子吃桃：猴子第一天摘下若干个桃子，当即吃了一半，还不过瘾，又多吃了一个。第二天早上又将剩下的桃子吃掉一半，又多吃了一个。以后每天早上都吃了前一天剩下的一半零一个。到第十天早上在想吃时，就只剩一个桃子了。求第一天共摘了多少个桃子？
3. 请写出列表支持的所有方法及说明（例如: append 向列表末尾添加元素）

	l=[1,2,3,4,3,2]
	
列表用法：			举例						输出								说明
.append()		l.append(4567)			Out:l=[1,2,3,4,3,2,4567]       		尾部增加
.sort()			l.sort()				Out:l=[1,2,2,3,3,4]					顺序排列
.insert()		l.insert(2,4567)		Out:l=[1,2,3,4567,4,3,2]			在对应列表索引之后增加
.extend()		l.extend(range(3))		Out:l=[1,2,3,4,3,2,0,1,2]			在列表后增加迭代对象
.count()		l.count(2)				Out:2								计算列表内的元素相同并输出相应的个数
.reversed()		ll=reversed(l)			out:list(ll)=[2,3,4,3,2,1]			将列表中的所有元素逆向索引输出
.clear()		l.clear()				Out:[]								清除列表内的所有元素并输出一个空的列表
.[]				l.[2]					Out:3								根据列表索引输出列表中相对应的内容
list()			l=list(range(5))		Out:l=[0,1,2,3,4]					list括号内为可迭代对象
list()			l=list('abc12')			Out:l=['a','b','c','1','2']			list括号内为字符转化为列表
list()			list(l)					Out:[1,2,3,4,3,2]					打印相应的列表

4. 实现一个简易的计算器，效果如下：
    （1）. 运行后提示让用户输入一个数字
    （2）. 提示输入操作符（+ - * /）
    （3）. 再次提示输入一个数字
    （4）. 打印计算结果
    （5）. 在不退出程序的前提下，可以允许用户继续输入新一组数据计 
	

#计算器1：
while 1:
    num_1 = input('Please input 1st num :')
    if num_1 == '':
        print('Error')
    else:
        oper = input('Please input Opeator:')
        if oper == '':
            print('Error')
        else:
            num_2 = input('Please input 2st num :')
            if oper == '+':
                print(int(num_1)+int(num_2))
            elif oper == '-':
                print(int(num_1)-int(num_2))
            elif oper == '*':
                print(int(num_1)*int(num_2))
            else:
                if num_2 == '0':
                    print('Error')
                else:
                    print(int(num_1)/int(num_2))
