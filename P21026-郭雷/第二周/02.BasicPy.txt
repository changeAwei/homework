####1. 简要说明Python垃圾回收机制####


#Python代码是运行在Python虚机上的，Python虚拟机有自己的垃圾回收机制。
#Python 采用的是 引用计数 机制为主，标记-清除 和 分代收集 俩种机制为辅的策略
#在Python中,如果一个对象的引用计数为0时，Python虚机就会回收这个对象的内存。

##以下是浏览器搜索获得
#标题:Python垃圾回收（GC）三层心法,你了解到第几层？
#参考链接https://www.jianshu.com/p/1e375fb40506


####2. 什么是斐波那契数列、素数、质数和猴子吃桃问题（文字说明）####
##斐波那契数列：从0,1开始，之后的数是之前两个数相加而得出的。（补充信息：斐波那契数列的开头数字0，是第零项）
#数学表达式:F(0)=1,F(1)=1,F(n)=F(n-1)+F(n-2);n>=2;
#编程思路：递归求值

##质数/素数-(Prime number）：大于1的自然数中，除了1和该数本身外，无法被其它数整除，那么这个数就是质数。反之称之为合数(Composite number)
#数学表达式 :	N%[2..n-1]!==0
#编程思路： 对N求2..n-1的余，若中间出现余零的就是合数，反之为质数


##猴子吃桃问题：一只猴子有很多香蕉，第一天吃掉了一半后再多吃一个，第二天又同样吃一半后再多吃一个，在N+1天的早上发现，香蕉只剩下1个了。 求第一天有多少个香蕉。
#数学表达式  f(t)=f(t-1)/2-1,f(n)=1
#编程思路：递归和迭代来解决问题


####3. 请写出列表支持的所有方法及说明（例如: append 向列表末尾添加元素）####
#列表： 1，长度可变，不可以一开始就定义大小；2，类表创建后，内存空间是连续的；3，线性结构，可用索引查找,索引超界>会抛异常。

##创建列表,
##修改原列（就地）        a=list(); a=[1,1,1,1];                  O(1)
##列表长度                len(a)->value;                          O(1)
##尾部插入（就地）        a.append(1)->None;                      O(1)
##任意位置插入（就地）    a.insert（index,value）->None;          O(n)
##批量（可迭代）插入      a.extend(list/dict/tuple)->None         O(n)
##创建新列表              a+b -> list, a*NUM->list;               *的方式注意深浅拷贝的问题        
##
##value计数,              a.acount(1)->value;                     O(n)
##value删除               a.remove(value)->None;                  从左到右查询删除，O(N)
##                        a.pop(index)->value;                    默认从尾部删除，指定index从指定处删除，超界报异常
##删除列表,               a.clear()->None;
##反转列表                a.reverse()->None;                      就地修改，返回none
##排序列表                a.sort(key=None,reverse=Flase)->None    就地修改，key 可设置为函数，默认升序，返回none
##查找                    1 in a ->bool 
##复制列表                a.copy()->list                          默认是浅（只复制索引）复制，返回是新列表

